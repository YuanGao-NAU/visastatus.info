/*
 * This file was generated by the Gradle 'init' task.
 *
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    id 'java-library'
    id 'maven-publish'
    id "io.spring.dependency-management" version "$dependencyVersion"
    id 'org.springframework.boot' version "$springbootVersion"
}

repositories {
    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
    mavenLocal()
    mavenCentral()
}

dependencies {
    api "org.springframework.boot:spring-boot-starter-web:$springbootVersion"
    api 'org.mariadb.jdbc:mariadb-java-client:3.0.6'
    api 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.2.2'
    api "org.springframework.boot:spring-boot-starter-mail:$springbootVersion"
    api 'com.giffing.bucket4j.spring.boot.starter:bucket4j-spring-boot-starter:0.7.0'
    api "org.springframework.boot:spring-boot-starter-cache:$springbootVersion"
    api 'org.ehcache:ehcache:3.10.1'
    testImplementation "org.springframework.boot:spring-boot-starter-test:$springbootVersion"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
description = 'demo'
java.sourceCompatibility = 11
java.targetCompatibility = 11

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Javadoc) {
    options.encoding = 'UTF-8'
}

task npmBuild(type: Exec) {
    workingDir = file(NODE_PROJ_DIR)
    commandLine NODE_MANAGER, "run", "winbuild"
}

task npmInstall(type: Exec) {
    workingDir = file(NODE_PROJ_DIR)
    commandLine NODE_MANAGER, "install"
}

task frontendAssemble(type: Copy, dependsOn: "npmBuild") {
    def buildDir = file("$NODE_PROJ_DIR/build")
    from buildDir
    into "build/resources/main/static"
}

compileJava.dependsOn 'frontendAssemble'

if (project.hasProperty("node.install")) {
    npmBuild.dependsOn 'npmInstall'
}
